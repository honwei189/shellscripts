# Configuration File - Nginx Server Configs
# http://nginx.org/en/docs/dirindex.html

load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_geoip2_module.so;

#Run as a unique, less privileged user for security reasons.
# Default: nobody nobody
user nginx nginx;
#user root root;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
worker_rlimit_nofile 65535;

events {
  # If you need more connections than this, you start optimizing your OS.
  # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
  # Should be < worker_rlimit_nofile.
  # Default: 512
  worker_connections  65535;
}

# Log errors and warnings to this file
# This is only used when you don't override it on a server{} level
# Default: logs/error.log error
error_log  /var/log/nginx/error.log warn;

# The file storing the process ID of the main process
# Default: nginx.pid
pid        /var/run/nginx.pid;
#google_perftools_profiles      /tmp/tcmalloc;


http {
  #limit_req_zone $anti_spider zone=anti_spider:10m rate=15r/m;

 # Default server
   #server {
   #    listen 80;
   #    listen 443;
   #    return 403;
   #}

  # Hide nginx version information.
  # Default: on
  server_tokens off;
  more_set_headers 'Server: ';

  # Specify MIME types for files.
  include       mime.types;

  # Default: text/plain
  default_type  application/octet-stream;

  #real_ip_header X-Forwarded-For;
  #set_real_ip_from 0.0.0.0/0;
  real_ip_header     CF-Connecting-IP;
  #real_ip_header       X-Real-IP;
  real_ip_recursive on;

  variables_hash_max_size 4096;
  variables_hash_bucket_size 2048;

  geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
        auto_reload 5m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_code default=MY country iso_code;
        $geoip2_data_country_name country names en;
  }

  geoip2 /usr/share/GeoIP/GeoLite2-City.mmdb {
        #$geoip2_data_city_name default=Kuching city names en;
        $geoip2_data_city_name city names en;
  }

  fastcgi_param COUNTRY_CODE $geoip2_data_country_code;
  fastcgi_param COUNTRY_NAME $geoip2_data_country_name;
  fastcgi_param CITY_NAME    $geoip2_data_city_name;

  more_set_headers "X-Country: $geoip2_data_country_name";
  add_header X-GeoCountry $geoip2_data_country_name;
  add_header X-GeoCode $geoip2_data_country_code;
  add_header X-GeoCity $geoip2_data_city_name;


  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
  charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    application/javascript
    application/json
    application/rss+xml
    application/xml;

  # Include $http_x_forwarded_for within default format used in log files
  log_format  main2  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  log_format main '[$time_local] From: $realip_remote_addr , '
                    'URL : "$scheme://$host$request_uri $server_protocol", Request ($request_method) : "$request_body", Status : $status , Bytes sent : $body_bytes_sent, Query : $query_string, '
                    'HTTP referer : "$http_referer" , Browser : "$http_user_agent", X-Forwarded IP : "$http_x_forwarded_for", '
                    'Country : "$geoip2_data_country_name", City : "$geoip2_data_city_name"\r\n';


  # Log access to this file
  # This is only used when you don't override it on a server{} level
  # Default: logs/access.log combined
  access_log  /var/log/nginx/access.log  main;

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  # Default: 75s
  keepalive_timeout 20s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  # For performance reasons, on FreeBSD systems w/ ZFS
  # this option should be disabled as ZFS's ARC caches
  # frequently used files in RAM by default.
  # Default: off
  sendfile        on;

  # Don't send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out.
  # Default: off
  tcp_nopush      on;

  # Enable gzip compression.
  # Default: off
  gzip off;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and CPU usage, offering about
  # 75% reduction for most ASCII files (almost identical to level 9).
  # Default: 1
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  # Default: 20
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  # Default: off
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  # Default: off
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  # text/html is always compressed by gzip module.
  # Default: text/html
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It is best if you enable this in a location{} block for
  # a specific directory, or on an individual server{} level.
  # gzip_static on;

  # Include files in the sites-enabled folder. server{} configuration files should be
  # placed in the sites-available folder, and then the configuration should be enabled
  # by creating a symlink to it in the sites-enabled folder.
  # See doc/sites-enabled.md for more info.

  brotli on;
  brotli_static on;
  brotli_min_length 1000;
  brotli_buffers 32 8k;
  brotli_comp_level 5;
  #brotli_types text/plain text/css text/xml application/javascript application/x-javascript application/xml application/xml+rss application/ecmascript application/json image/svg+xml;
  brotli_types *;


  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  fastcgi_intercept_errors on;

  include /etc/nginx/maps/*.conf;
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/domains/*.conf;
  client_max_body_size 8000m;
}
